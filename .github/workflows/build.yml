name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  ANDROID_SDK_ROOT: $HOME/android-sdk
  ANDROID_HOME:    $HOME/android-sdk
  ANDROID_NDK_HOME: $HOME/android-sdk/ndk/23.1.7779620
  PATH: |
    $HOME/android-sdk/cmdline-tools/latest/bin
    $HOME/android-sdk/platform-tools
    $HOME/.local/bin
    $PATH

jobs:
  build-apk:
    runs-on: ubuntu-latest
    timeout-minutes: 90

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '11'

      - name: Install apt dependencies (including git)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git \
            wget unzip \
            python3-dev build-essential pkg-config \
            libgl1-mesa-dev libgles2-mesa-dev \
            libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev \
            libmtdev-dev libjpeg-dev libfreetype6-dev \
            xclip xsel

      - name: Install Android SDK Command-line Tools
        run: |
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          cd $ANDROID_SDK_ROOT/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip
          rm cmdline-tools.zip
          mv cmdline-tools latest

      - name: Install SDK packages & accept licenses
        run: |
          yes | sdkmanager --sdk_root="$ANDROID_SDK_ROOT" --install \
            "platform-tools" \
            "platforms;android-31" \
            "build-tools;31.0.0" \
            "ndk;23.1.7779620" \
            "cmdline-tools;latest"
          yes | sdkmanager --sdk_root="$ANDROID_SDK_ROOT" --licenses

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python packages & Buildozer
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          pip install buildozer
          pip install -r requirements.txt

      - name: Build APK with Buildozer
        run: |
          buildozer --verbose android debug

      - name: Create GitHub Release & upload APK
        uses: softprops/action-gh-release@v1
        with:
          files: ./.buildozer/android/platform/build/dists/*/bin/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
