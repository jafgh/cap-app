# .github/workflows/build.yml

name: Android CI Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up JDK 11 which is often required for recent Android build tools
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin' # Popular open-source distribution

      # Set up Python
      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      # Install general dependencies and Kivy dependencies
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
              build-essential \
              git \
              zip \
              unzip \
              pkg-config \
              libffi-dev \
              liblzma-dev \
              libssl-dev \
              autoconf \
              automake \
              libtool \
              cmake \
              libsdl2-dev \
              libsdl2-image-dev \
              libsdl2-mixer-dev \
              libsdl2-ttf-dev \
              libgstreamer1.0-dev \
              gstreamer1.0-plugins-base \
              gstreamer1.0-plugins-good

      # Install Buildozer and Cython using pip
      - name: Install buildozer and cython
        run: pip install buildozer cython

      # Run Buildozer command to build the Android debug APK
      # The '-v' flag provides verbose output, helpful for debugging
      - name: Build with Buildozer
        run: buildozer -v android debug

      # Upload the generated APK as an artifact
      # Adjust the path if your APK name is different
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: captchaapp-apk # Name of the artifact zip file
          path: bin/*.apk      # Path to the generated APK(s)
