name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-apk:
    runs-on: ubuntu-latest
    timeout-minutes: 90

    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java (for Android SDK)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Install required system packages (git, build, Kivy deps)
        run: |
          sudo apt-get update
          sudo apt-get install -y git unzip wget build-essential \
            python3-dev pkg-config libgl1-mesa-dev libgles2-mesa-dev \
            libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev \
            libmtdev-dev libjpeg-dev libfreetype6-dev xclip xsel

      - name: Install Android SDK command-line tools
        run: |
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          cd $ANDROID_SDK_ROOT/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip
          rm cmdline-tools.zip
          mv cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest

      - name: Accept Android SDK licenses
        run: |
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses

      - name: Install Android SDK components
        run: |
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT \
            "platform-tools" \
            "platforms;android-31" \
            "build-tools;31.0.0" \
            "ndk;23.1.7779620"

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies and Buildozer
        run: |
          python3 -m pip install --upgrade pip setuptools wheel
          pip install buildozer
          pip install -r requirements.txt

      - name: Ensure version exists in buildozer.spec
        run: |
          grep -q "^version" buildozer.spec || echo "version = 0.1" >> buildozer.spec

      - name: Build APK with Buildozer
        env:
          PATH: $ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH
        run: |
          buildozer --verbose android debug
